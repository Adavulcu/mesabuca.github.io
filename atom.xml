<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[My Octopress Blog]]></title>
  <link href="http://mesabuca.github.io/atom.xml" rel="self"/>
  <link href="http://mesabuca.github.io/"/>
  <updated>2016-04-21T16:17:03+03:00</updated>
  <id>http://mesabuca.github.io/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Some Methods and Usageof Them]]></title>
    <link href="http://mesabuca.github.io/blog/2016/04/21/some-methods-and-usageof-them/"/>
    <updated>2016-04-21T16:13:10+03:00</updated>
    <id>http://mesabuca.github.io/blog/2016/04/21/some-methods-and-usageof-them</id>
    <content type="html"><![CDATA[<p>  If you want to use a method you should write it with dat &lsquo;.&rsquo; after which you want to use on. For example
&ndash; a = &ldquo;Ruby&rdquo; \ a.reverse &ndash; Its output will be &lsquo;ybuR&rsquo;. Hence the name it is reversing the words. If you want to use more than one method
you should use dat &lsquo;.&rsquo; between of the methods. For example <code>a = "limas"</code> <code>a.reverse.capitalize</code>
And here is some methods with means :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">gets</span>            <span class="o">--</span> <span class="n">getting</span> <span class="n">a</span> <span class="n">integer</span> <span class="ow">or</span> <span class="n">string</span> <span class="ow">or</span> <span class="n">anything</span>
</span><span class='line'><span class="nb">chomp</span>           <span class="o">--</span> <span class="k">when</span> <span class="n">yo</span> <span class="n">enter</span> <span class="n">a</span> <span class="n">space</span> <span class="n">character</span> <span class="n">it</span> <span class="n">cleans</span> <span class="n">that</span> <span class="n">spaces</span>
</span><span class='line'><span class="n">capitalize</span>      <span class="o">--</span> <span class="no">Its</span> <span class="n">make</span> <span class="n">capitalize</span> <span class="n">the</span> <span class="n">word</span><span class="err">&#39;</span><span class="n">s</span> <span class="n">first</span> <span class="n">character</span>
</span><span class='line'><span class="n">upcase</span>          <span class="o">--</span> <span class="no">Its</span> <span class="n">make</span> <span class="n">capitalize</span> <span class="n">all</span> <span class="n">words</span>
</span><span class='line'><span class="n">downcase</span>        <span class="o">--</span> <span class="no">Its</span> <span class="n">make</span> <span class="n">small</span> <span class="n">all</span> <span class="n">character</span>
</span><span class='line'><span class="n">reverse</span>         <span class="o">--</span> <span class="no">It</span> <span class="err">ı</span><span class="n">s</span> <span class="n">reversing</span> <span class="n">words</span> <span class="n">but</span> <span class="n">only</span> <span class="n">strings</span><span class="o">.</span>
</span><span class='line'><span class="nb">to_s</span>            <span class="o">--</span> <span class="no">Its</span> <span class="n">converting</span> <span class="n">to</span> <span class="n">strings</span>
</span><span class='line'><span class="n">to_i</span>            <span class="o">--</span> <span class="no">Its</span> <span class="n">converting</span> <span class="n">to</span> <span class="n">integer</span>
</span><span class='line'><span class="nb">to_a</span>            <span class="o">--</span> <span class="no">Its</span> <span class="n">converting</span> <span class="n">to</span> <span class="n">array</span>
</span><span class='line'><span class="n">each</span>            <span class="o">--</span> <span class="no">Processing</span> <span class="n">each</span> <span class="n">variable</span> <span class="k">in</span> <span class="n">arrays</span>
</span><span class='line'><span class="nb">split</span>           <span class="o">--</span> <span class="n">it</span> <span class="n">takes</span> <span class="k">in</span> <span class="n">a</span> <span class="n">string</span> <span class="ow">and</span> <span class="n">returns</span> <span class="n">an</span> <span class="n">array</span><span class="o">.</span>
</span><span class='line'><span class="n">to_sym</span>          <span class="o">--</span> <span class="n">it</span> <span class="n">convert</span> <span class="n">to</span> <span class="n">symbol</span> <span class="ow">and</span> <span class="n">using</span> <span class="n">symbol</span> <span class="n">faster</span> <span class="n">than</span> <span class="n">string</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Let's Start]]></title>
    <link href="http://mesabuca.github.io/blog/2016/04/21/lets-start/"/>
    <updated>2016-04-21T16:08:06+03:00</updated>
    <id>http://mesabuca.github.io/blog/2016/04/21/lets-start</id>
    <content type="html"><![CDATA[<p>  Let&rsquo;s start with classic :) . &lsquo;Hello world!&rsquo; . As I said, its so simple <code>puts "Hello World!"</code> or <code>print "Hello World!"</code>
There is only one differences between them. That is &lsquo;puts&rsquo; ending the line I mean when you put something next step will come
bellow that output.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Introduction]]></title>
    <link href="http://mesabuca.github.io/blog/2016/04/21/introduction/"/>
    <updated>2016-04-21T15:02:53+03:00</updated>
    <id>http://mesabuca.github.io/blog/2016/04/21/introduction</id>
    <content type="html"><![CDATA[<p>  Hello I am Mehmet Şamil BÜYÜKÇAĞLAYAN and I am starting to learn new programming language which is created by Yukihiro Matsumoto.
Ruby is a Object oriented language and it is legibility. If you know English you can understand easily. For example
<code>10.times.puts("Hello World!")</code>. it prints  10 times &lsquo;Hello World!&rsquo;.In another example <code>a = "hello" \\ a.upcase</code>.It makes
letters uppercase. Unlike some other languages it is interpreted language.It means it can work until wrong code and it makes finding
problem easier.And also programmer can explain him self to computer with it I&rsquo;m gonna tell other good things when its turns come.</p>
]]></content>
  </entry>
  
</feed>
